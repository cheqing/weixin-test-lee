<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.iyunr.pro</groupId>
  <artifactId>weixin-test-lee</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <properties>
  	<java.version>1.7</java.version>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<mybatis.version>1.3.0</mybatis.version>
  	<pagehelper.version>1.1.3</pagehelper.version>
  	<!-- <logback.version>1.2.3</logback.version>
	<slf4j.version>1.7.25</slf4j.version> -->
  </properties>
  
	<parent>
	    <groupId>org.springframework.boot</groupId>
	    <!-- 自动包含以下信息： -->
        <!-- 1.使用Java6编译级别 -->
        <!-- 2.使UTF-8编码 -->
        <!-- 3.实现了通用的测试框架 (JUnit, Hamcrest, Mockito). -->
        <!-- 4.智能资源过滤 -->
        <!-- 5.智能的插件配置(exec plugin, surefire, Git commit ID, shade). -->
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>1.5.4.RELEASE</version>
	</parent>
	<dependencies>
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
	    <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
		    <scope>test</scope>
		</dependency>
		<!--spring-boot-configuration:spring boot 配置处理器; -->
		<dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-configuration-processor</artifactId>  
            <optional>true</optional>  
        </dependency> 
        <!-- 支持JDBC数据库 -->
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- mysql数据库 -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		</dependency>
        
        <!-- 数据库连接池Druid -->
        <dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>druid</artifactId>
		    <version>1.1.1</version>
		    <scope>runtime</scope> 
		</dependency>
		
		<!-- 阿里巴巴fastjosn -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.39</version>
		</dependency>
				
		
		<!-- mybatis -->
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>${mybatis.version}</version>
		</dependency>
		
		<!-- 分页插件 pageHelper -->
		<dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper-spring-boot-starter</artifactId>
		    <version>${pagehelper.version}</version>
		</dependency>
		
		<!-- beetl整合 -->
		<dependency>
		    <groupId>com.ibeetl</groupId>
		    <artifactId>beetl-framework-starter</artifactId>
		    <version>1.1.17.RELEASE</version>
		</dependency>
		
		<!--加载beetl-->
<!--         <dependency> -->
<!--             <groupId>com.ibeetl</groupId> -->
<!--             <artifactId>beetl</artifactId> -->
<!--             <version>2.7.12</version> -->
<!--         </dependency> -->
		
<!-- 		<dependency> -->
<!-- 		    <groupId>cn.yerl.web</groupId> -->
<!-- 		    <artifactId>spring-boot-starter-beetl</artifactId> -->
<!-- 		    <version>1.0.0</version> -->
<!-- 		</dependency> -->

			<!-- java对象 xml互转 -->
			<dependency>
			    <groupId>com.thoughtworks.xstream</groupId>
			    <artifactId>xstream</artifactId>
			    <version>1.4.10</version>
			</dependency>
		
		<!-- 热部署 -->
		<!-- <dependency>  
		    <groupId>org.springframework.boot</groupId>  
		    <artifactId>spring-boot-devtools</artifactId>  
		    <optional>true</optional>optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入  
		</dependency>   -->
		
		<!-- 日志 (springboot已经集成了logback，所以这里不需要引入了)-->
		<!-- <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency> -->
	</dependencies>
  
  <build>
	<finalName>weixin-test-lee</finalName>
	<plugins>
		<plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <dependencies>
            	<!-- springboot热部署插件依赖，通过mvn spring-boot:run启动就支持热部署了（mvn spring-boot:run 使用Tomcat（默认）启动） -->
                <dependency>
				    <groupId>org.springframework</groupId>
				    <artifactId>springloaded</artifactId>
				    <version>1.2.7.RELEASE</version>
				</dependency>
            </dependencies>
        </plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<configuration>
				<overwrite>true</overwrite>
				<source>1.5</source>
				<target>1.5</target>
				<encoding>UTF-8</encoding><!-- 指定编码格式，否则在DOS下运行mvn compile命令时会出现莫名的错误，因为系统默认使用GBK编码 -->
			</configuration>
		</plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-compiler-plugin</artifactId>
		  <configuration>
		    <source>1.7</source>
		    <target>1.7</target>
		    <encoding>UTF-8</encoding><!-- 指定编码格式，否则在DOS下运行mvn compile命令时会出现莫名的错误，因为系统默认使用GBK编码 -->  
		  </configuration>
		</plugin>
	</plugins>
</build>

<!-- <profiles>  
    <profile>  
        <id>jdk-1.7</id>  
        <activation>  
            <activeByDefault>true</activeByDefault>  
            <jdk>1.7</jdk>  
        </activation>  
        <properties>  
            <maven.compiler.source>1.7</maven.compiler.source>  
            <maven.compiler.target>1.7</maven.compiler.target>  
            <maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>  
        </properties>  
    </profile>  
</profiles>  -->
</project>